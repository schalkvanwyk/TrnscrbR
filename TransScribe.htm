<!DOCTYPE html>
<html class="no-js" lang="en">
<head>
    <meta charset="utf-8" />
    <!-- <meta http-equiv="x-ua-compatible" content="ie=edge" /> -->
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="AWS Transcription Viewer" />

    <title>Trnscrbr - A Transcription Viewer</title>

    <!-- Control the behavior of search engine crawling and indexing -->
    <meta name="robots" content="noindex,nofollow,nosnippet"><!-- All Search Engines -->
    <meta name="googlebot" content="noindex,nofollow,nosnippet"><!-- Google Specific -->

    <!-- Tells Google not to show the sitelinks search box -->
    <meta name="google" content="nositelinkssearchbox">

    <!-- Tells Google not to provide a translation for this document -->
    <meta name="google" content="notranslate">

    <script>
      // remove no-js and add 'js' to the HTML
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    </script>
    
    <link rel="stylesheet" type="text/css" href="css/normalize.css" />
    <link rel="stylesheet" type="text/css" href="css/aria.disclosure.css" />
    <link rel="stylesheet" type="text/css" href="css/simptip.css" media="screen,projection" />
    <!-- <link rel="stylesheet" type="text/css" href="css/mediacontrol.css" /> -->
    <link rel="stylesheet" type="text/css" href="css/main.css" />
    <link rel="stylesheet" type="text/css" href="css/aria.disclosure.demo.css" />

    <meta name="theme-color" content="#fafafa" />

    <style>
        html {
            height: 100vh;
        }

        body main {
            display: grid;
            grid-template-columns: 2fr 1fr;
            grid-auto-rows: 62px;
            height: 100vh;
        }

        .Trnscrbr-ErrorContainer {
            height: 25px;
            width: 100%;
            display: block;
            float: inline-start;
            justify-content: center;
            align-items: center;
            vertical-align: middle;
            text-align: center;
            color: rgb(248, 184, 184);
            font-size: 1rem;
            background-color: rgb(149, 21, 21);
            opacity: 80%;
        }

        .toolButton {
            border: none;
            background-color: inherit;
            padding: 4px 4px;
            font-size: 14px;
            cursor: pointer;
            display: inline-block;
        }

        /* .file-input {

        } */

        section.transcript {
            grid-column: 1 / 2;
            grid-row: 1 / 12;
            /* column-width: 70vw; */
            min-width: 385px;
            max-width: 992px;
        }

        section.transcript h1 button{
            float: right;
            margin-right: 10px;
            font-size: medium;
        }

        section.transcript div.raw {
            height: 20vh;
            overflow: auto;
        }

        section.transcript div.segmented {
            height: 40vh;
            overflow-wrap: break-word;
            overflow-x: auto;
            overflow-y: auto;
        }

        section.transcript div.segmented blockquote {
            display: grid;
            grid-auto-flow: column;
            grid-template-columns: 2.5vw 0.6vw 2.5vw 0.6vw 6vw;
            align-items: baseline;
            text-align: justify;
            margin-block-start: 0em;
            margin-block-end: 0em;
            margin-inline-start: 0em;
            margin-inline-end: 0em;
            /* background-color: cornsilk; */
        }

        section.transcript div.segmented p {
            /* display: inline; */
            margin: 2px; /* between paragraphs */
        }

        /* section.transcript div.segmented div {
            display: inline-block;
        } */

        /* section.transcript div.segmented dfn {
            opacity: 80%;
        } */

        section.transcript div.segmented span.segmentLabel {
            color: azure;
            /* height: 22px; */
            /* display: inline-block; */
        }
        /* section.transcript div.segmented span.dialogue {
            -webkit-filter: blur(1.2px);
            filter: blur(1.2px);
            transition: all 0.2s ease;
        } */
        /* section.transcript div.segmented span.punctuation {
            -webkit-filter: blur(0.8px);
            filter: blur(0.8px);
        } */
        section.transcript div.segmented span.speaking {
            background-color: yellow;
            -webkit-filter: blur(0px);
            filter:blur(0px);
        }
        section.transcript div.segmented span.spoke {
            background-color: lightyellow;
            -webkit-filter: blur(0.5px);
            filter: blur(0.5px);
        }

        section.aside {
            grid-column: 2 / 2;
            /* column-width: 30vw; */
            /* max-width: 600px; */
        }

        section.aside.mediaPlayer {
            grid-row: 1;
        }

        section.aside.info {
            grid-row: 7;
        }

        section.aside ul {
            margin: 0 0 0 5px;
            padding: 0;
        }

        section.aside ol {
            margin: 0 0 0 50px;
            padding: 0;
        }

        section.aside .speakers ul {
            color: azure;
            width: 98%;
            list-style-type: none;
        }

        section.aside .speakers input {
            color: azure;
            width: 98%;
            border: 0;
            opacity: 100%;
        }

        div.file-name {
            word-break: break-all;
            overflow-wrap: anywhere;
        }

        .speaker-1 {
            background-color: darkgoldenrod;
            opacity: 75%;
        }
        .speaker-2 {
            background-color: darkgreen;
            opacity: 75%;
        }
        .speaker-3 {
            background-color: darkblue;
            opacity: 75%;
        }
        .speaker-4 {
            background-color: darkcyan;
            opacity: 75%;
        }
        .speaker-5 {
            background-color: darksalmon;
            opacity: 75%;
        }
        .speaker-6 {
            background-color: darkslateblue;
            opacity: 75%;
        }
        .speaker-7 {
            background-color: darkolivegreen;
            opacity: 75%;
        }
        .speaker-8 {
            background-color: darkkhaki;
            opacity: 75%;
        }
        .speaker-9 {
            background-color: darkseagreen;
            opacity: 75%;
        }
    </style>

    <script src="js/plugins.js" defer></script>
    <script src="js/components/aria.disclosure.js" defer></script>
    <!-- <script src="js/components/video-player.js"></script> -->
    <script src="js/components/errormsngr.mjs" type="module"></script>
    <script src="js/main.mjs" type="module"></script>
    <script src="js/core/app.js" defer></script>

</head>
<header>
    <h1><abbr>Trnscrbr</abbr> - A Transcription Viewer</h1>
    <!-- <hr /> -->
    <!-- <template>
        <h1>Hello Trnscrbr!</h1>
    </template>
    <my-component></my-component> -->
</header>
<body id="body">
    <!-- <div id="page" class="page">
        <div data-disclosure="A generated button">
            <p data-disclosure-content>
                This content will turn into a disclosure
                once the script runs.
            </p>
        </div>

        <div id="ex" data-disclosure data-disclosure-type="block">
            <span data-disclosure-btn>
            A full width "button"
            </span>
            <div data-disclosure-content>
            <p>
                Allows for a large hit area for the disclosure widget's
                trigger.
            </p>
            <p>
                <a href="#!">
                This link is here just for focus testing.
                </a>
            </p>
            </div>
        </div>

        <div id="ex2" data-disclosure data-disclosure-type="block" data-disclosure-open data-disclosure-class="test-class">
            <h4>
            <button data-disclosure-btn>
                Disclosure button within a heading
            </button>
            </h4>
            <div data-disclosure-content>
            <p>
                This disclosure widget is opened by default. Because that's a thing that should be able to happen.
            </p>

            <p>
                Here's an example of a nested flyout disclosure widget:

                <span data-disclosure="I'm a flyout!" data-disclosure-type="flyout">
                <span data-disclosure-content>
                    This example has a <a href="#">link within it</a>. Flyouts can
                    be closed via the <kbd>ESC</kbd> key, as long as focus is on the <code>button</code> or within the revealed content.
                    <br>
                    Flyouts will auto-close if focus leaves the flyout.
                </span>
                </span>

                All of this is contained within a single paragraph.
            </p>

            <p>
                Here's an example of yet another flyout disclosure widget because testing:

                <span data-disclosure="I'm another flyout!" data-disclosure-hover data-disclosure-type="flyout">
                <span data-disclosure-content>
                    This one doesn't have a link in it.
                </span>
                </span>

                All of this is contained within a single paragraph.
            </p>
            </div>
        </div>

        <section>
            <p>
                This example showcases how a disclosure widget can be used to create
                an off-site navigation. Using the <code>data-disclosure-manual-classes</code> to
                not add any of the default classes to the widget, and to instead use totally custom
                classes for the component.
            </p>

            <nav aria-label="example" id="my_nav" data-disclosure-type="flyout" data-disclosure data-disclosure-manual-classes>
                <button data-disclosure-btn hidden>Menu</button>

                <div data-disclosure-content>
                    <ul>
                        <li><a href="#">Link 1</a></li>
                        <li><a href="#">Link 2</a></li>
                        <li><a href="#">Link 3</a></li>
                    </ul>
                </div>
            </nav>

            <p>
                <a href="#">Focusable element after the navigation</a>.
            </p>
        </section>
    </div> -->

<!--
<input id="testBindingInput" />
<div id="testBinding"></div>
<script>
    var tbiData = {
        myInput: "test"
    };
    new Binding({
        object: tbiData,
        property: "myInput"
    })
    .addBinding(document.getElementById("testBindingInput"), "value", "keyup")
    .addBinding(document.getElementById("testBinding"), "innerHTML");
</script>
-->

    <main class="page" aria-label="Transcript Workspace">
        <section id="transcriptSection" class="transcript">
            <h1>Transcript <button id="clearTranscripts" name="Clear" class="simptip-info simptip-multiline simptip-position-top" data-tooltip="Reset and clear loaded transcript data.">Clear</button></h1>
            <hr />
            <label for="transcriptFileSource" class="simptip-info simptip-multiline simptip-position-top" data-tooltip="Click to select and load the transcript file">
                Select the transcript file
                <div id="transcriptFileName" class="file-name">No file selected</div>
            </label>
            <input id="transcriptFileSource" name="transcriptFileSource" class="file-input hidden" type="file" accept=".json, text/json" />
            <error-msngr></error-msngr>
            <hr />
            <div class="workspaceContainer">
                <div id="segmentedTranscriptContainer" class="segmented"></div>
            </div>
            <!-- <div id="scrollOutput"></div> -->
            <hr />
            <details>
                <summary>Full transcript</summary>
                <div id="rawTranscriptContainer" class="raw"></div>
            </details>
        </section>
        <section id="mediaSection" class="mediaPlayer aside">
            <h1>Media</h1>
            <hr />
            <figure id="mediaContainer">
                <figcaption>
                    <label for="mediaFileSource" class="simptip-info simptip-multiline simptip-position-top" data-tooltip="Click to select and load the media file">
                        <p>Select the media file</p>
                        <div id="mediaFileName" class="file-name">No File</div>
                    </label>
                    <input id="mediaFileSource" class="file-input hidden" type="file" name="mediaFileSource" />
                </figcaption>
                <!-- https://developer.mozilla.org/en-US/docs/Web/Guide/Audio_and_video_delivery/Video_player_styling_basics -->
                <video id="mediaPlayer" height="150px" preload="metadata" controls>
                    Your browser does not support the <code>video</code>/<code>audio</code> element.
                </video>
                <!-- <div id="video-controls" class="controls" data-state="hidden">
                    <button id="playpause" type="button" data-state="play">Play/Pause</button>
                    <button id="stop" type="button" data-state="stop">Stop</button>
                    <div class="progress">
                        <progress id="progress" value="0" min="0">
                            <span id="progress-bar"></span>
                        </progress>
                    </div>
                    <button id="mute" type="button" data-state="mute">Mute/Unmute</button>
                    <button id="volinc" type="button" data-state="volup">Vol+</button>
                    <button id="voldec" type="button" data-state="voldown">Vol-</button>
                    <button id="fs" type="button" data-state="go-fullscreen">Fullscreen</button>
                </div> -->
                <figcaption>
                    &copy;  | <a href=""></a>
                </figcaption>
            </figure>
            <hr />
        </section>
        <section id="transcriptInfo" class="info aside">
            <details class="info aside">
                <summary class="simptip-info simptip-multiline simptip-position-top" data-tooltip="Select to see details about the transcript file">Transcript Information</summary>
                <hr />
                <div id="infoTranscriptContainer" class="info"></div>
            </details>
            <hr />
            <details id="speakersContainer" open class="speakers aside">
                <summary class="simptip-info simptip-multiline simptip-position-top" data-tooltip="Select to see speakers identified in the transcript">Speakers</summary>
                <hr />
                <ul>
                </ul>
            </details>
            <hr />
        </section>
    </main>
</body>

<!-- Disclosure demo https://github.com/scottaohara/aria_disclosure_widget -->
<!-- <script type="text/javascript">
    var disclosure = '[data-disclosure]';
    var els = document.querySelectorAll(disclosure);

    // Generate all tab instances
    for ( var i = 0; i < els.length; i++ ) {
      var dis = new A11Ydisclosure( els[i] );
    }

    // navigation example specific:
    var body = document.getElementById('body');
    var nav = document.getElementById('my_nav');
    var navBtn = nav.querySelector('button');
    var navBar = nav.querySelector('[data-disclosure-content]');
    var expandedClass = 'nav-expanded';

    navBtn.addEventListener('click', function () {
      if ( body.classList.contains(expandedClass) ) {
        closeNav();
      }
      else {
        openNav()
      }
    });

    var openNav = function () {
      body.classList.add(expandedClass);
      document.addEventListener('click', docClick, false);
    }

    var closeNav = function () {
      body.classList.remove(expandedClass);
    }
</script> -->

</html>